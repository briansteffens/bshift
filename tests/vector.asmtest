import vector;

u64 add_and_get()
{
    vector::vector<u64> v;
    v.init();

    v.add(3);
    v.add(7);

    return v.get(0) + v.get(1);
}

u64 add_length()
{
    vector::vector<u64> v;
    v.init();

    if (v.length != 0)
    {
        return 1;
    }

    v.add(3);

    if (v.length != 1)
    {
        return 2;
    }

    v.add(7);

    if (v.length != 2)
    {
        return 3;
    }

    return 0;
}

u64 capacity_double()
{
    vector::vector<u64> v;
    v.init();

    if (v.allocated != 8)
    {
        return 1;
    }

    while (v.length < 9)
    {
        v.add(0);
    }

    if (v.allocated != 16)
    {
        return 2;
    }

    return 0;
}

u64 main()
{
    return {{ test }}();
}

-----

{
    "cases": [
        {
            "name": "add some data, then retrieve it",
            "test": "add_and_get",
            "expect_status": "10"
        },
        {
            "name": "adding data modifies length field",
            "test": "add_length",
            "expect_status": 0
        },
        {
            "name": "adding enough data causes capacity to double",
            "test": "capacity_double",
            "expect_status": 0
        }
    ]
}
