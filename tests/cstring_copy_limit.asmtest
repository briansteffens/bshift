import cstring;

u64 test_hello2(u64 t0)
{
    u8* source = "hello";
    u8[10] destination;
    destination[2] = 7;

    auto copied = cstring::copy_limit(source, &destination, 2);

    if (destination[0] != 104)
    {
        return 100;
    }

    if (destination[1] != 101)
    {
        return 101;
    }

    if (destination[2] != 7)
    {
        return 102;
    }

    return copied;
}

u64 test_hi4(u64 t0)
{
    u8* source = "hi";
    u8[10] destination;
    destination[2] = 7;

    auto copied = cstring::copy_limit(source, &destination, 4);

    if (destination[0] != 104)
    {
        return 100;
    }

    if (destination[1] != 105)
    {
        return 101;
    }

    if (destination[2] != 7)
    {
        return 102;
    }

    return copied;
}

u64 test_hi0(u64 t0)
{
    u8* source = "hi";
    u8[10] destination;
    destination[0] = 7;

    auto copied = cstring::copy_limit(source, &destination, 0);

    if (destination[0] != 7)
    {
        return 100;
    }

    return copied;
}

u64 test_empty2(u64 t0)
{
    u8* source = "";
    u8[10] destination;
    destination[0] = 7;

    auto copied = cstring::copy_limit(source, &destination, 0);

    if (destination[0] != 7)
    {
        return 100;
    }

    return copied;
}

u64 main()
{
    return test_{{ test }}(0);
}

-----

{
    "cases": [
        {
            "name": "copy 2 chars from string 'hello' = 'he'",
            "test": "hello2",
            "expect_status": "2"
        },
        {
            "name": "copy 4 chars from string 'hi' = 'hi'",
            "test": "hi4",
            "expect_status": "2"
        },
        {
            "name": "copy 0 chars from string 'hi' = ''",
            "test": "hi0",
            "expect_status": "0"
        },
        {
            "name": "copy 2 chars from string '' = ''",
            "test": "empty2",
            "expect_status": "0"
        }
    ]
}
